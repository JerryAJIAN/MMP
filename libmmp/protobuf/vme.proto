package vmdProto;

message vec2
{
	required float x=1;
	required float y=2;
}
message vec3
{
	required float x=1;
	required float y=2;
	required float z=3;
}
message vec4
{
	required float x=1;
	required float y=2;
	required float z=3;
	required float w=4;
}

message Header
{
	required string versionInfo=1; //Stuff like 'Vocaloid Motion Data 0002'
	repeated string modelInfo=2; //Stuff like 'Hastune Miku' (multiple models allowed)
}

message IDTag
{
	required uint64 id=1;
	required string name=2;
}

//Bezier-Curve interpolation parameters
message BezInterpolParams
{
	//For all points, p0=(0,0), p3=(127,127)
	//These should be stored as float values between 0~127.

	//(x,y) points for X-axis interpolation
	required vec2 X1=1;
	required vec2 X2=2;

	//(x,y) points for Y-axis interpolation
	required vec2 Y1=3;
	required vec2 Y2=4;

	//(x,y) points for Z-axis interpolation
	required vec2 Z1=5;
	required vec2 Z2=6;
	
	//(x,y) points for Rotation interpolation
	required vec2 R1=7;
	required vec2 R2=8;
}

message BoneFrame
{
	//Keyframe number
	required uint64 frameNumber=1;

	//bone position, rotation
	required vec3 position=2;
	required vec4 rotation=3;

	//Presumably an application could use linear interpolation if no bezier-curve params were provided
	optional BezInterpolParams interpolParameters=4;
}



message MorphFrame
{
	//Keyframe number
	required uint64 frameNumber=1;

	//Interpolation value (Slerp interpolation)
	required float value=2;
}

message CameraFrame
{
	required uint64 frameNumber=1;

	//camrea position, rotation
	required vec3 position=2;
	required vec3 rotation=3;

	//Presumably an application could use linear interpolation if no bezier-curve params were provided
	optional BezInterpolParams interpolParameters=4;

	required uint64 viewAngle=5;

	//Perspective. uint32 to allow for growth
	//0: On
	//1: Off
	required uint32 perspective=6;
}

message LightFrame
{
	required uint64 frameNumber=1;
	required float distance=2; //distance between the target point and the camera
	
	//Color (RGB)
	required vec3 color=3;

	//Light position
	required vec3 position=4;
}

message SelfShadowFrame
{
	required uint64 frameNumber=1;

	//SelfShadow type. uint32 to allow for growth.
	//0: Off
	//1: mode1
	//2: mode2
	required uint32 type=2;

	//Shadow distance (Given MMD input value L, this value is (10000.0-L)/100000.0
	required float distance=3;
}


message IKInfo
{
	required uint64 id=1; //IK Bone ID
	required uint32 isOn=2; //0: Off, 1: On
}
//IK on/off keyframe element data
message ShowIKFrame
{
	required uint64 frame=1;
	
	//Display model. uint32 to allow for growth.
	//0: Off
	//1: On
	required uint32 show=2;
	
	//List of IK bone ids and their changed on/off statuses
	repeated IKInfo ikInfo=3;
}

message BoneFrameTable
{
	required uint64 id=1;
	repeated BoneFrame frames=2;
}

message MorphFrameTable
{
	required uint64 id=1;
	repeated MorphFrame frames=2;
}

message CameraFrameTable
{
	optional uint64 id=1;
	repeated CameraFrame frames=2;
}

message LightFrameTable
{
	optional uint64 id=1;
	repeated LightFrame frames=2;
}

message SelfShadowFrameTable
{
	optional uint64 id=1;
	repeated SelfShadowFrame frames=2;
}

message VocaloidMotionData
{
	required Header header=1;

	repeated IDTag boneIDTable=2;
	repeated IDTag morphIDTable=3;
	repeated IDTag cameraIDTable=4;
	repeated IDTag lightIDTable=5;
	repeated IDTag selfShadowIDTable=6;

	repeated BoneFrameTable boneFrameTables=7;
	repeated MorphFrameTable morphFrameTables=8;
	repeated CameraFrameTable cameraFrameTables=9;
	repeated LightFrameTable lightFrameTables=10;
	repeated SelfShadowFrameTable selfShadowFrameTables=11;
	repeated ShowIKFrame showIKFrames=12;
}
